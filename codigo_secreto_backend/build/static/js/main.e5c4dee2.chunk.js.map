{"version":3,"sources":["services/rooms.js","components/square.js","components/board.js","components/room.js","App.js","index.js"],"names":["roomId","axios","get","process","post","Square","card","flipCard","flippedStyle","colorStyle","flipped","console","log","team","className","onClick","word","Board","cards","items","map","index","key","id","socket","io","connect","Room","useRouteMatch","params","drawCards","Array","fill","useState","setCards","useEffect","roomService","then","response","data","visible","_id","flipCardSocket","on","off","a","emit","Home","history","useHistory","NewRoom","createdRoom","push","App","path","ReactDOM","render","document","getElementById"],"mappings":"4OAgBe,EAbH,SAACA,GACX,OAAOC,IAAMC,IAAN,UAHKC,aAGL,YAAwBH,KAYlB,EATA,WACb,OAAOC,IAAMG,KAAN,UAPKD,gB,uBCyBCE,EAxBA,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAClBC,EAAe,OACfC,EAAa,8BAYjB,OAXIH,EAAKI,UACPF,EAAe,kBACfG,QAAQC,IAAI,SAAUN,EAAKO,MAGzBJ,GADgB,IAAdH,EAAKO,KACM,oCAEA,oCAKf,yBAAKC,UAAU,qBACb,yBAAKA,UAAWN,EAAcO,QAASR,GACrC,yBAAKO,UAAU,gCAAgCR,EAAKU,MACpD,yBAAKF,UAAWL,GAAaH,EAAKU,SCV3BC,EARD,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOX,EAAe,EAAfA,SAChBY,EAAQD,EAAME,KAAI,SAACd,EAAMe,GAAP,OACtB,kBAAC,EAAD,CAAQC,IAAKD,EAAOf,KAAMA,EAAMC,SAAU,kBAAMA,EAASD,EAAKiB,UAGhE,OAAO,yBAAKT,UAAU,SAASK,I,iBCAjCR,QAAQC,IAAI,YADGT,KAGf,IAAMqB,EAASC,IAAGC,QAHHvB,KAyEAwB,EApEF,WACX,IACM3B,EADQ4B,YAAc,cACPC,OAAON,GAEtBO,EAAYC,MAAM,IAAIC,KAAK,IAJhB,EAKSC,mBAASH,GALlB,mBAKVZ,EALU,KAKHgB,EALG,KAQjBC,qBAAU,WACRxB,QAAQC,IAAI,UACZwB,EAAgBpC,GAAQqC,MAAK,SAACC,GAC5B3B,QAAQC,IAAI,qBAEZsB,EACEI,EAASC,KAAKrB,MAAME,KAAI,SAACd,GAAD,MAAW,CACjCU,KAAMV,EAAKU,KACXN,QAASJ,EAAKkC,QACd3B,KAAMP,EAAKO,KACXU,GAAIjB,EAAKmC,cAId,IAEH,IAAMC,EAAiB,SAACnB,GACtBW,EACEhB,EAAME,KAAI,SAACd,GAAD,OACRA,EAAKiB,KAAOA,EACRjB,EADJ,eAGSA,EAHT,CAIMI,SAAS,SAMrByB,qBAAU,WACRX,EAAOmB,GAAG,cAAeD,GACzBlB,EAAOoB,IAAIF,KACV,IAEH,IAAMnC,EAAQ,uCAAG,WAAOgB,GAAP,SAAAsB,EAAA,sDACfX,EACEhB,EAAME,KAAI,SAACd,GAAD,OACRA,EAAKiB,KAAOA,EACRjB,EADJ,eAGSA,EAHT,CAIMI,SAAS,QAInBc,EAAOsB,KAAK,cAAevB,GAXZ,2CAAH,sDAcd,OACE,yBAAKT,UAAU,QACb,yBAAKA,UAAU,UACb,kDAEF,yBAAKA,UAAU,cACb,kBAAC,EAAD,CAAOI,MAAOA,EAAOX,SAAUA,OCjEjCwC,EAAO,WACX,IAAMC,EAAUC,cAEVC,EAAO,uCAAG,4BAAAL,EAAA,6DACdlC,QAAQC,IAAI,iCADE,SAEYwB,IAFZ,OAERe,EAFQ,OAGdxC,QAAQC,IAAIuC,EAAYZ,KAAKhB,IAC7ByB,EAAQI,KAAR,iBAAuBD,EAAYZ,KAAKhB,KAJ1B,2CAAH,qDAOb,OACE,6BACE,6BACG,IACD,qDAA+B,KAEjC,6BACE,6BACE,4BAAQR,QAAS,kBAAMmC,MAAvB,gBAuBKG,EAhBH,WACV,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,cACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACT,IACD,kBAAC,EAAD,MAAS,Q,QCpCnBC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.e5c4dee2.chunk.js","sourcesContent":["import axios from 'axios'\nlet baseUrl = process.env.REACT_APP_BASEURL\n\nconst get = (roomId) => {\n  return axios.get(`${baseUrl}/${roomId}`)\n}\n\nconst create = () => {\n  return axios.post(`${baseUrl}`)\n}\n\nconst update = (id, newObject, roomId) => {\n  const request = axios.put(`${baseUrl}/${roomId}/${id}`, newObject)\n  return request.then((response) => response.data)\n}\n\nexport default {\n  get,\n  create,\n  update,\n}\n","import React from 'react'\n\nconst Square = ({ card, flipCard }) => {\n  let flippedStyle = 'card'\n  let colorStyle = 'card__face card__face--back'\n  if (card.flipped) {\n    flippedStyle = 'card is-flipped'\n    console.log('team: ', card.team)\n\n    if (card.team === false) {\n      colorStyle = 'card__face card__face--back--blue'\n    } else {\n      colorStyle = 'card__face card__face--back--red'\n    }\n  }\n\n  return (\n    <div className=\"scene scene--card\">\n      <div className={flippedStyle} onClick={flipCard}>\n        <div className=\"card__face card__face--front\">{card.word}</div>\n        <div className={colorStyle}>{card.word}</div>\n      </div>\n    </div>\n  )\n}\n\nexport default Square\n","import React from 'react'\nimport Square from './square'\nconst Board = ({ cards, flipCard }) => {\n  const items = cards.map((card, index) => (\n    <Square key={index} card={card} flipCard={() => flipCard(card.id)} />\n  ))\n\n  return <div className=\"board\">{items}</div>\n}\n\nexport default Board\n","import React, { useState, useEffect } from 'react'\nimport roomService from '../services/rooms'\nimport { useRouteMatch } from 'react-router-dom'\nimport Board from './board'\nimport io from 'socket.io-client'\n\nlet ENDPOINT = process.env.REACT_APP_ENDPOINT\nconsole.log('endpoint:', ENDPOINT)\n\nconst socket = io.connect(ENDPOINT)\n\nconst Room = () => {\n  const match = useRouteMatch('/rooms/:id')\n  const roomId = match.params.id\n\n  const drawCards = Array(25).fill({})\n  const [cards, setCards] = useState(drawCards)\n\n  //5ec0e1eca442f10378bf5982\n  useEffect(() => {\n    console.log('effect')\n    roomService.get(roomId).then((response) => {\n      console.log('promise fulfilled')\n\n      setCards(\n        response.data.cards.map((card) => ({\n          word: card.word,\n          flipped: card.visible,\n          team: card.team,\n          id: card._id,\n        }))\n      )\n    })\n  }, [])\n\n  const flipCardSocket = (id) => {\n    setCards(\n      cards.map((card) =>\n        card.id !== id\n          ? card\n          : {\n              ...card,\n              flipped: true,\n            }\n      )\n    )\n  }\n\n  useEffect(() => {\n    socket.on('flippedCard', flipCardSocket)\n    socket.off(flipCardSocket)\n  }, [])\n\n  const flipCard = async (id) => {\n    setCards(\n      cards.map((card) =>\n        card.id !== id\n          ? card\n          : {\n              ...card,\n              flipped: true,\n            }\n      )\n    )\n    socket.emit('flippedCard', id)\n  }\n\n  return (\n    <div className=\"game\">\n      <div className=\"header\">\n        <h1>CÃ³digo Secreto</h1>\n      </div>\n      <div className=\"game-board\">\n        <Board cards={cards} flipCard={flipCard} />\n      </div>\n    </div>\n  )\n}\n\nexport default Room\n","//medium.com/@shifrb/how-to-build-tic-tac-toe-with-react-hooks-ca37f6040022\n\nimport React from 'react'\nimport './App.css'\nimport roomService from './services/rooms'\nimport { Switch, Route, useHistory } from 'react-router-dom'\nimport Room from './components/room'\n\nconst Home = () => {\n  const history = useHistory()\n\n  const NewRoom = async () => {\n    console.log('button pressed to create room')\n    const createdRoom = await roomService.create()\n    console.log(createdRoom.data.id)\n    history.push(`/rooms/${createdRoom.data.id}`)\n  }\n\n  return (\n    <div>\n      <div>\n        {' '}\n        <h2>CODIGO SECRETO ONLINE</h2>{' '}\n      </div>\n      <div>\n        <div>\n          <button onClick={() => NewRoom()}>NEW ROOM</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst App = () => {\n  return (\n    <div>\n      <Switch>\n        <Route path=\"/rooms/:id\">\n          <Room />\n        </Route>\n        <Route path=\"/\">\n          {' '}\n          <Home />{' '}\n        </Route>\n      </Switch>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}